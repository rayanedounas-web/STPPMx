// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// replace_cpp
arma::vec replace_cpp(arma::vec x);
RcppExport SEXP _STPPMx_replace_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(replace_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// dmvt_cpp
arma::mat dmvt_cpp(arma::mat x, double v, arma::mat mu, arma::mat Sig);
RcppExport SEXP _STPPMx_dmvt_cpp(SEXP xSEXP, SEXP vSEXP, SEXP muSEXP, SEXP SigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sig(SigSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvt_cpp(x, v, mu, Sig));
    return rcpp_result_gen;
END_RCPP
}
// partitions_draw_cpp
Rcpp::List partitions_draw_cpp(arma::vec y, arma::mat X_sim, arma::mat X_reg, int M, double alpha, arma::vec c, double v, double s, arma::vec sigma, arma::mat beta, arma::mat m_0, arma::mat Phi, double w, arma::vec time_effects, arma::vec space_effects, arma::vec mixed_effects);
RcppExport SEXP _STPPMx_partitions_draw_cpp(SEXP ySEXP, SEXP X_simSEXP, SEXP X_regSEXP, SEXP MSEXP, SEXP alphaSEXP, SEXP cSEXP, SEXP vSEXP, SEXP sSEXP, SEXP sigmaSEXP, SEXP betaSEXP, SEXP m_0SEXP, SEXP PhiSEXP, SEXP wSEXP, SEXP time_effectsSEXP, SEXP space_effectsSEXP, SEXP mixed_effectsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_sim(X_simSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_reg(X_regSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m_0(m_0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time_effects(time_effectsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type space_effects(space_effectsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mixed_effects(mixed_effectsSEXP);
    rcpp_result_gen = Rcpp::wrap(partitions_draw_cpp(y, X_sim, X_reg, M, alpha, c, v, s, sigma, beta, m_0, Phi, w, time_effects, space_effects, mixed_effects));
    return rcpp_result_gen;
END_RCPP
}
// partitions_draw_cpp_fast
Rcpp::List partitions_draw_cpp_fast(arma::vec y, arma::mat X_sim, arma::mat X_reg, int M, double alpha, arma::vec c, double v, double s, arma::vec sigma, arma::mat beta, arma::mat m_0, arma::mat Phi, double w, arma::vec time_effects, arma::vec space_effects, arma::vec mixed_effects, arma::vec sizes_mem, arma::mat sums_mem, arma::cube products_mem);
RcppExport SEXP _STPPMx_partitions_draw_cpp_fast(SEXP ySEXP, SEXP X_simSEXP, SEXP X_regSEXP, SEXP MSEXP, SEXP alphaSEXP, SEXP cSEXP, SEXP vSEXP, SEXP sSEXP, SEXP sigmaSEXP, SEXP betaSEXP, SEXP m_0SEXP, SEXP PhiSEXP, SEXP wSEXP, SEXP time_effectsSEXP, SEXP space_effectsSEXP, SEXP mixed_effectsSEXP, SEXP sizes_memSEXP, SEXP sums_memSEXP, SEXP products_memSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_sim(X_simSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_reg(X_regSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m_0(m_0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time_effects(time_effectsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type space_effects(space_effectsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mixed_effects(mixed_effectsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sizes_mem(sizes_memSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sums_mem(sums_memSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type products_mem(products_memSEXP);
    rcpp_result_gen = Rcpp::wrap(partitions_draw_cpp_fast(y, X_sim, X_reg, M, alpha, c, v, s, sigma, beta, m_0, Phi, w, time_effects, space_effects, mixed_effects, sizes_mem, sums_mem, products_mem));
    return rcpp_result_gen;
END_RCPP
}
// predict_cpp_new
Rcpp::List predict_cpp_new(int obs, int station, int time, arma::mat X_train_sim, arma::mat x_futur_sim, arma::mat x_futur_reg, double y_test, Rcpp::List beta_list, Rcpp::List sigma_list, Rcpp::List space_effects_list, Rcpp::List time_effects_list, Rcpp::List mixed_effects_list, Rcpp::List clusters_sizes_list, Rcpp::List partition_list, arma::vec alpha_vec, arma::uword nb_density, int nb_draw, double w, arma::mat Phi, double v, double s, arma::mat m_0);
RcppExport SEXP _STPPMx_predict_cpp_new(SEXP obsSEXP, SEXP stationSEXP, SEXP timeSEXP, SEXP X_train_simSEXP, SEXP x_futur_simSEXP, SEXP x_futur_regSEXP, SEXP y_testSEXP, SEXP beta_listSEXP, SEXP sigma_listSEXP, SEXP space_effects_listSEXP, SEXP time_effects_listSEXP, SEXP mixed_effects_listSEXP, SEXP clusters_sizes_listSEXP, SEXP partition_listSEXP, SEXP alpha_vecSEXP, SEXP nb_densitySEXP, SEXP nb_drawSEXP, SEXP wSEXP, SEXP PhiSEXP, SEXP vSEXP, SEXP sSEXP, SEXP m_0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< int >::type station(stationSEXP);
    Rcpp::traits::input_parameter< int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_train_sim(X_train_simSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_futur_sim(x_futur_simSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_futur_reg(x_futur_regSEXP);
    Rcpp::traits::input_parameter< double >::type y_test(y_testSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type beta_list(beta_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type sigma_list(sigma_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type space_effects_list(space_effects_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type time_effects_list(time_effects_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type mixed_effects_list(mixed_effects_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type clusters_sizes_list(clusters_sizes_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type partition_list(partition_listSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_vec(alpha_vecSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type nb_density(nb_densitySEXP);
    Rcpp::traits::input_parameter< int >::type nb_draw(nb_drawSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m_0(m_0SEXP);
    rcpp_result_gen = Rcpp::wrap(predict_cpp_new(obs, station, time, X_train_sim, x_futur_sim, x_futur_reg, y_test, beta_list, sigma_list, space_effects_list, time_effects_list, mixed_effects_list, clusters_sizes_list, partition_list, alpha_vec, nb_density, nb_draw, w, Phi, v, s, m_0));
    return rcpp_result_gen;
END_RCPP
}
// solve_cpp
arma::mat solve_cpp(arma::mat M, bool symmetric);
RcppExport SEXP _STPPMx_solve_cpp(SEXP MSEXP, SEXP symmetricSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< bool >::type symmetric(symmetricSEXP);
    rcpp_result_gen = Rcpp::wrap(solve_cpp(M, symmetric));
    return rcpp_result_gen;
END_RCPP
}
// spsolve_cpp
arma::sp_mat spsolve_cpp(arma::sp_mat M);
RcppExport SEXP _STPPMx_spsolve_cpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(spsolve_cpp(M));
    return rcpp_result_gen;
END_RCPP
}
// kronecker_cpp
arma::mat kronecker_cpp(arma::mat M, arma::mat Q);
RcppExport SEXP _STPPMx_kronecker_cpp(SEXP MSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    rcpp_result_gen = Rcpp::wrap(kronecker_cpp(M, Q));
    return rcpp_result_gen;
END_RCPP
}
// spkronecker_cpp
arma::sp_mat spkronecker_cpp(arma::sp_mat M, arma::sp_mat Q);
RcppExport SEXP _STPPMx_spkronecker_cpp(SEXP MSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Q(QSEXP);
    rcpp_result_gen = Rcpp::wrap(spkronecker_cpp(M, Q));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_STPPMx_replace_cpp", (DL_FUNC) &_STPPMx_replace_cpp, 1},
    {"_STPPMx_dmvt_cpp", (DL_FUNC) &_STPPMx_dmvt_cpp, 4},
    {"_STPPMx_partitions_draw_cpp", (DL_FUNC) &_STPPMx_partitions_draw_cpp, 16},
    {"_STPPMx_partitions_draw_cpp_fast", (DL_FUNC) &_STPPMx_partitions_draw_cpp_fast, 19},
    {"_STPPMx_predict_cpp_new", (DL_FUNC) &_STPPMx_predict_cpp_new, 22},
    {"_STPPMx_solve_cpp", (DL_FUNC) &_STPPMx_solve_cpp, 2},
    {"_STPPMx_spsolve_cpp", (DL_FUNC) &_STPPMx_spsolve_cpp, 1},
    {"_STPPMx_kronecker_cpp", (DL_FUNC) &_STPPMx_kronecker_cpp, 2},
    {"_STPPMx_spkronecker_cpp", (DL_FUNC) &_STPPMx_spkronecker_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_STPPMx(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
